/*
*********************************************************************************************************
*	                                  
*	模块名称 : AD7606驱动模块
*	文件名称 : bsp_spi_ad7606.c
*	版    本 : V1.0
*	说    明 : 驱动AD7606 ADC转换器 SPI接口
*	修改记录 :
*		版本号  日期       作者    说明
*		v1.0    2011-06-18 armfly  创建
*
*	Copyright (C), 2010-2011, 安富莱电子 www.armfly.com
*
*********************************************************************************************************
*/

#include "bsp.h"

static void AD7606_SetInputRange(uint8_t _ucRange);

static int16_t s_adc_now[8];

/*
*********************************************************************************************************
*	函 数 名: bsp_InitAD7606
*	功能说明: 初始化AD7606 SPI口线
*	形    参：无
*	返 回 值: 无
*********************************************************************************************************
*/
void bsp_InitAD7606(void)
{
	/* 设置过采样模式 */
	ad7606_SetOS(0);

	AD7606_SetInputRange(1);

	/* 设置GPIO的初始状态 */
	ad7606_Reset();				/* 硬件复位复AD7606 */

	AD_CONVST_HIGH();			/* CONVST脚设置为高电平 */			
}

/*
*********************************************************************************************************
*	函 数 名: AD7606_SetInputRange
*	功能说明: 配置AD7606模拟信号输入量程。
*	形    参: _ucRange : 0 表示正负5V   1表示正负10V
*	返 回 值: 无
*********************************************************************************************************
*/
void AD7606_SetInputRange(uint8_t _ucRange)
{
	if (_ucRange == 0)
	{
		AD_RANGE_5V();	/* 设置为正负5V */
	}
	else
	{
		AD_RANGE_10V();	/* 设置为正负10V */
	}
}

/*
*********************************************************************************************************
*	函 数 名: ad7606_Reset
*	功能说明: 硬件复位AD7606
*	形    参：无
*	返 回 值: 无
*********************************************************************************************************
*/
void ad7606_Reset(void)
{
	/*DAT设置成输入. CS SCLK设置成推挽输出.*/
	P1M1 |= 0x04;
	P1M0 |= 0x03;
	/*RESET CONVST RANGE OS0 OS1 OS2 设置成推挽输出.*/
	P0M1 |= 0x40;
	P0M0 |=	0x3f;
	/* CS  SCLK拉高 */
	AD_CS = 1;
	SCLK = 1;

 	/* AD7606是高电平复位，要求最小脉宽50ns */
	AD_RESET_LOW();
	
	AD_RESET_HIGH();
	AD_RESET_HIGH();
	AD_RESET_HIGH();
	AD_RESET_HIGH();
	
	AD_RESET_LOW();
}

/*
*********************************************************************************************************
*	函 数 名: ad7606_SetOS
*	功能说明: 设置过采样模式（数字滤波，硬件求平均值)
*	形    参：_ucMode : 0-6  0表示无过采样，1表示2倍，2表示4倍，3表示8倍，4表示16倍
*				5表示32倍，6表示64倍
*	返 回 值: 无
*********************************************************************************************************
*/
void ad7606_SetOS(uint8_t _ucMode)
{
	if (_ucMode == 1)
	{
		AD_OS2_0();
		AD_OS1_0();
		AD_OS0_1();
	}
	else if (_ucMode == 2)
	{
		AD_OS2_0();
		AD_OS1_1();
		AD_OS0_0();
	}
	else if (_ucMode == 3)
	{
		AD_OS2_0();
		AD_OS1_1();
		AD_OS0_1();
	}
	else if (_ucMode == 4)
	{
		AD_OS2_1();
		AD_OS1_0();
		AD_OS0_0();
	}
	else if (_ucMode == 5)
	{
		AD_OS2_1();
		AD_OS1_0();
		AD_OS0_1();
	}
	else if (_ucMode == 6)
	{
		AD_OS2_1();
		AD_OS1_1();
		AD_OS0_0();
	}
	else	/* 按0处理 */
	{
		AD_OS2_0();
		AD_OS1_0();
		AD_OS0_0();
	}
}

/*
*********************************************************************************************************
*	函 数 名: ad7606_StartConv
*	功能说明: 启动AD7606的ADC转换
*	形    参：无
*	返 回 值: 无
*********************************************************************************************************
*/
void ad7606_StartConv(void)
{
	/* 上升沿开始转换，低电平持续时间至少25ns  */
	AD_CONVST_LOW();
	AD_CONVST_LOW();
	AD_CONVST_LOW();	/* 连续执行2次，低电平约50ns */
	
	AD_CONVST_HIGH();
}
	
/*
*********************************************************************************************************
*	函 数 名: ad7606_ReadBytes
*	功能说明: 读取AD7606的采样结果
*	形    参：
*	返 回 值: 无
*********************************************************************************************************
*/
uint16_t ad7606_ReadBytes(void)
{
	uint16_t usData = 0;
	uint8_t i;

	/* spi */	
	for (i = 0; i < 16; i++)
	{
		SCLK = 0;
		usData = usData << 1;
		usData |= DAT;
		SCLK = 1;
	}

	return usData;		
}

/*
*********************************************************************************************************
*	函 数 名: ad7606_scan
*	功能说明: 扫描调用本函数，用于读取AD转换器数据
*	形    参：无
*	返 回 值: 无
*********************************************************************************************************
*/
void ad7606_Scan(void) 		/* 此函数代码按照时序编写 */
{
	uint8_t i;
	uint8_t n=0;				

	/* BUSY = 0 时.ad7606处于空闲状态ad转换结束 */	
	if (BUSY == 0)		   
    {
		AD_CS_LOW(); /* SPI片选 = 0 */
	
		for (i = 0; i < CH_NUM; i++)
		{
			s_adc_now[i] = ad7606_ReadBytes(); /* 读数据 */	
		}
	
		AD_CS_HIGH(); /* SPI片选 = 1 */

		
		ad7606_StartConv();	/* 给开始信号 */		 	
		while (BUSY==0);
	}
}	  

/*
*********************************************************************************************************
*	函 数 名: GetAdcFormFifo
*	功能说明: 从FIFO中读取一个ADC值
*	形    参：_usReadAdc : 存放ADC结果的变量指针
*	返 回 值: 1 表示OK，0表示暂无数据
*********************************************************************************************************
*/
int16_t ad7606_ReadAdc(uint8_t _ch)
{
	int16_t sAdc;
	
	DISABLE_INT();	
	sAdc = s_adc_now[_ch];
	ENABLE_INT();

	return sAdc;
}

/***************************** 安富莱电子 www.armfly.com (END OF FILE) *********************************/
